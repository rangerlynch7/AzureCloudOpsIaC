{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Virtual Network"
			}
		},
		"vnetAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "The IP Address pool for the virtual network in CIDR format."
			}
		},
		"nsgName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Network Security Group."
			}
		},
		"appGatewayNsgName": {
			"type": "string",
			"defaultValue":"AppGatewayNsg",
			"metadata": {
				"description": "Name of the Network Security Group."
			}
		},
		"securityRules.Name": {
			"type": "string",
			"metadata": {
				"description": "Name of the Security Rule."
			}
		},
		"securityRules.properties.protocol": {
			"type": "string",
			"allowedValues": [
				"TCP",
				"UDP"
			],
			"metadata": {
				"description": "Protocol of the Security Rule, select from allowed values."
			}
		},
		"securityRules.properties.sourcePortRange": {
			"type": "string",
			"metadata": {
				"description": "Source Address Range of the Security Rule, can be Internet or any exisitng network/subnets."
			}
		},
		"securityRules.properties.destinationPortRange": {
			"type": "string",
			"metadata": {
				"description": "Destination Address Range of the Security Rule, can be any existing network/subnets."
			}
		},
		"securityRules.properties.sourceAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "Destination Address Range of the Security Rule, can be any existing network/subnets."
			}
		},
		"securityRules.properties.destinationAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "The Destination IP Address pool for the NSG in CIDR format."
			}
		},
		"securityRules.properties.access": {
			"type": "string",
			"allowedValues": [
				"Allow",
				"Deny"
			],
			"metadata": {
				"description": "Access type of the NSG, either Allow or Deny traffic."
			}
		},
		"securityRules.properties.priority": {
			"type": "string",
			"metadata": {
				"description": "Priority number of the rule, preferably have the format in hundreds, eg: 100,200,300 etc."
			}
		},
		"securityRules.properties.direction": {
			"type": "string",
			"allowedValues": [
				"Inbound",
				"Outbound"
			],
			"metadata": {
				"description": "Direction allowed by the Security group for traffic flow, could be either Inbound or Outbound"
			}
		},
		"nextHopIP": {
			"type": "string",
			"metadata": {
				"description": "The next hop ip, this should be an address in the firewall subnet"
			}
		},
		"subnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Subnet"
			}
		},
		"appGatewaySubnetName": {
			"type": "string",
			"defaultValue":"AppGatewaySubnet",
			"metadata": {
				"description": "Name of the Subnet"
			}
		},
		"subnetPrefix": {
			"type": "string",
			"metadata": {
				"description": "The IP Address pool for the Subnet in CIDR format."
			}
		},
		"appGatewaySubnetPrefix": {
			"type": "string",
			"defaultValue":"10.200.0.0/24",
			"metadata": {
				"description": "The IP Address pool for the Application Gateway Subnet in CIDR format."
			}
		},
		"azfwRouteTableName": {
			"type": "string",
			"defaultvalue": "azfwRouteTable",
			"metadata": {
				"description": "Name of the Route table for external firewall connectivity."
			}
		},
		"firewallSubnetName": {
			"type": "string",
			"defaultvalue": "AzureFirewallSubnet",
			"metadata": {
				"description": "Firewall subnet name"
			}
		},
		"azureFirewallSubnetPrefix": {
			"type": "string",
			"metadata": {
				"description": "Address Prefix of the Firewall subnet, prefer to have 10.x.255.0/24 as a standard practice"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Type of the Storage Account, please choose from allowed values"
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Storage Account, must be unique as it has a FQDN"
			}
		},
		"storageAccountKind": {
			"type": "string",
			"allowedValues": [
				"Storage",
				"StorageV2",
				"BlobStorage",
				"FileStorage",
				"BlockBlobStorage"
			],
			"metadata": {
				"description": "Storage Account kind"
			}
		},
		"publicIPAllocationMethod": {
			"type": "string",
			"defaultValue": "Dynamic",
			"allowedValues": [
				"Static",
				"Dynamic"
			],
			"metadata": {
				"description": "Allocation method of the Public IP Address, must be either Static or Dynamic Allocation"
			}
		},
		"vmssName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Load Balancer"
			}
		},
		"vmSku": {
			"type": "string",
			"allowedValues": [
				"Standard_D14",
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_M8-2ms"
			],
			"defaultValue": "Standard_A1",
			"metadata": {
				"description": "App VM size to provision. See https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-sizes-specs"
			}
		},
		"instanceCount": {
			"type": "int",
			"metadata": {
				"description": "Number of VM instances (100 or less)."
			},
			"defaultValue": 2,
			"maxValue": 100
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Admin username on all VMs."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Admin password on all VMs."
			}
		},
		"imageReference.publisher": {
			"type": "string",
			"metadata": {
				"description": "Name of the image publisher"
			}
		},
		"imageReference.offer": {
			"type": "string",
			"metadata": {
				"description": "Version of the image"
			}
		},
		"imageReference.sku": {
			"type": "string",
			"metadata": {
				"description": "Sku of the image specified"
			}
		},
		"imageReference.version": {
			"type": "string",
			"defaultValue": "latest",
			"metadata": {
				"description": "Version of the image"
			}
		},
		"capacity.minimum": {
			"type": "int",
			"metadata": {
				"description": "Minimum number of VMs in the Scale Set"
			}
		},
		"capacity.maximum": {
			"type": "int",
			"metadata": {
				"description": "Maximum number of VMs in the Scale Set"
			}
		},
		"capacity.default": {
			"type": "int",
			"metadata": {
				"description": "Default number of VMs in the Scale Set"
			}
		},
		"metricTrigger.increaseThreshold": {
			"type": "int",
			"metadata": {
				"description": "Threshold value for metric before adding an instance"
			}
		},
		"metricTrigger.decreaseThreshold": {
			"type": "int",
			"metadata": {
				"description": "Threshold value for metric"
			}
		},
		"workspaceId": {
			"type": "string",
			"defaultValue": "558b56b2-cdfe-47f8-a2d3-0b1dfcf2bcba",
			"metadata": {
				"description": "Workspace ID of the OMS workspace"
			}
		},
		"workspaceKey": {
			"type": "string",
			"metadata": {
				"description": "Workspace key of the OMS workspace, will be referenced from keyvault"
			}
		},
		"applicationGatewayName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Application Gateway Service"
			}
		},
		"applicationGatewaySize": {
			"type": "string",
			"allowedValues": [
			  "Standard_Small",
			  "Standard_Medium",
			  "Standard_Large"
			],
			"defaultValue": "Standard_Small",
			"metadata": {
			  "description": "application gateway size"
			}
		  },
		"applicationGatewayInstanceCount": {
			"type": "int",
			"allowedValues": [
			  1,
			  2,
			  3,
			  4,
			  5,
			  6,
			  7,
			  8,
			  9,
			  10
			],
			"defaultValue": 2,
			"metadata": {
			  "description": "application gateway instance count"
			}
		  },
		  "appGatewayFrontendPort": {
			"type": "int",
			"defaultValue":80,
			"metadata": {
			  "description": "application gateway front end port"
			}
		  },
		  "appGatewaybackendPort": {
			"type": "int",
			"defaultValue":80,
			"metadata": {
			  "description": "application gateway back end port"
			}
		  },
		  "appGatewaybackendIPAddresses": {
			"type": "array",
			"defaultValue": [
			  {
				"IpAddress": "10.0.0.4"
			  },
			  {
				"IpAddress": "10.0.0.5"
			  }
			],
			"metadata": {
			  "description": "back end pool ip addresses"
			}
		  },
		  "appGatewayCookieBasedAffinity": {
			"type": "string",
			"allowedValues": [
			  "Enabled",
			  "Disabled"
			],
			"defaultValue": "Disabled",
			"metadata": {
			  "description": "cookie based affinity"
			}
		  }
	},
	"variables": {
		"templateBaseUrl": "https://raw.githubusercontent.com/rangerlynch7/ForkAzureCloudOpsIaC/ARMTemplates/computeNischith/DeploymentTemplates/ARMTemplates/",
		"computeCoreTemplateBaseUrl":"[concat(variables('templateBaseUrl'), 'Compute/Core/')]",
		"computeExtensionsTemplateBaseUrl":"[concat(variables('templateBaseUrl'), 'Compute/Extensions/')]",
		"networkingTemplateBaseUrl":"[concat(variables('templateBaseUrl'), 'Networking/')]",
		"virtualNetworkTemplateUrl": "[concat(variables('networkingTemplateBaseUrl'), 'VirtualNetwork.json')]",
		"nsgTemplateUrl": "[concat(variables('networkingTemplateBaseUrl'), 'NetworkSecurityGroup.json')]",
		"subnetTemplateUrl": "[concat(variables('networkingTemplateBaseUrl'), 'Subnet.json')]",
		"vmssTemplateUrl": "[concat(variables('computeCoreTemplateBaseUrl'), 'Vmss.json')]",
		"appGatewayTemplateUrl":"[concat(variables('networkingTemplateBaseUrl'), 'ApplicationGateway.json')]"
	},
	"resources": [
		{
			"apiVersion": "2017-05-10",
			"name": "VnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('virtualNetworkTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "NsgDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('nsgTemplateUrl')]"
				},
				"parameters": {
					"nsgName": {
						"value": "[parameters('nsgName')]"
					},
					"securityRules.Name": {
						"value": "[parameters('securityRules.Name')]"
					},
					"securityRules.properties.protocol": {
						"value": "[parameters('securityRules.properties.protocol')]"
					},
					"securityRules.properties.sourcePortRange": {
						"value": "[parameters('securityRules.properties.sourcePortRange')]"
					},
					"securityRules.properties.destinationPortRange": {
						"value": "[parameters('securityRules.properties.destinationPortRange')]"
					},
					"securityRules.properties.sourceAddressPrefix": {
						"value": "[parameters('securityRules.properties.sourceAddressPrefix')]"
					},
					"securityRules.properties.destinationAddressPrefix": {
						"value": "[parameters('securityRules.properties.destinationAddressPrefix')]"
					},
					"securityRules.properties.access": {
						"value": "[parameters('securityRules.properties.access')]"
					},
					"securityRules.properties.priority": {
						"value": "[parameters('securityRules.properties.priority')]"
					},
					"securityRules.properties.direction": {
						"value": "[parameters('securityRules.properties.direction')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "SubnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('subnetTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					},
					"subnetName": {
						"value": "[parameters('subnetName')]"
					},
					"subnetPrefix": {
						"value": "[parameters('subnetPrefix')]"
					},
					"nsgName": {
						"value": "[parameters('nsgName')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment",
				"NsgDeployment"
			]
		},
		{
			"apiVersion": "2017-05-10",
			"name": "AppGatewayNsgDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('nsgTemplateUrl')]"
				},
				"parameters": {
					"nsgName": {
						"value": "[parameters('appGatewayNsgName')]"
					},
					"securityRules.Name": {
						"value": "[parameters('securityRules.Name')]"
					},
					"securityRules.properties.protocol": {
						"value": "[parameters('securityRules.properties.protocol')]"
					},
					"securityRules.properties.sourcePortRange": {
						"value": "[parameters('securityRules.properties.sourcePortRange')]"
					},
					"securityRules.properties.destinationPortRange": {
						"value": "[parameters('securityRules.properties.destinationPortRange')]"
					},
					"securityRules.properties.sourceAddressPrefix": {
						"value": "[parameters('securityRules.properties.sourceAddressPrefix')]"
					},
					"securityRules.properties.destinationAddressPrefix": {
						"value": "[parameters('securityRules.properties.destinationAddressPrefix')]"
					},
					"securityRules.properties.access": {
						"value": "[parameters('securityRules.properties.access')]"
					},
					"securityRules.properties.priority": {
						"value": "[parameters('securityRules.properties.priority')]"
					},
					"securityRules.properties.direction": {
						"value": "[parameters('securityRules.properties.direction')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "AppGatewaySubnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('subnetTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					},
					"subnetName": {
						"value": "[parameters('appGatewaySubnetName')]"
					},
					"subnetPrefix": {
						"value": "[parameters('appGatewaySubnetPrefix')]"
					},
					"nsgName": {
						"value": "[parameters('appGatewaynsgName')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment",
				"AppGatewayNsgDeployment",
				"SubnetDeployment"
			]
		},
		{
			"apiVersion": "2017-05-10",
			"name": "ApplicationGatewayDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('appGatewayTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"subnetName": {
						"value": "[parameters('appGatewaySubnetName')]"
					},
					"applicationGatewayName": {
						"value": "[parameters('applicationGatewayName')]"
					},
					"applicationGatewaySize": {
						"value": "[parameters('applicationGatewaySize')]"
					},
					"applicationGatewayInstanceCount": {
						"value": "[parameters('applicationGatewayInstanceCount')]"
					},
					"appGatewayFrontendPort": {
						"value": "[parameters('appGatewayFrontendPort')]"
					},
					"appGatewayBackendPort": {
						"value": "[parameters('appGatewayBackendPort')]"
					},
					"appGatewayBackendIPAddresses": {
						"value": "[parameters('appGatewayBackendIPAddresses')]"
					},
					"appGatewayCookieBasedAffinity": {
						"value": "[parameters('appGatewayCookieBasedAffinity')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment"
			]
		}
	]
}